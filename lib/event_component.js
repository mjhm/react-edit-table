// Generated by CoffeeScript 1.10.0
(function() {
  var Component, EventComponent, EventEmitter,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty,
    slice = [].slice;

  Component = require('react').Component;

  EventEmitter = require('events').EventEmitter;

  EventComponent = (function(superClass) {
    extend(EventComponent, superClass);

    function EventComponent() {
      EventComponent.__super__.constructor.apply(this, arguments);
      this._eventEmitter = new EventEmitter;
    }

    EventComponent.prototype.componentDidUpdate = function() {
      return this._eventEmitter.emit('componentDidUpdate');
    };

    EventComponent.prototype.emit = function() {
      var args, event, ref;
      event = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      return (ref = this._eventEmitter).emit.apply(ref, [event].concat(slice.call(args)));
    };

    EventComponent.prototype.on = function(event, callback) {
      return this._eventEmitter.on(event, callback);
    };

    EventComponent.prototype.once = function(event, callback) {
      return this._eventEmitter.once(event, callback);
    };

    return EventComponent;

  })(Component);

  module.exports = EventComponent;

}).call(this);
